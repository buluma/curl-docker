---
name: build-push

on:
  pull_request:
  push:
    paths:
      - 'alpine/latest/**'
      - '.github/workflows/build-and-push.yml'
    branches:
      - 'releases/**'
      - master
  schedule:
    - cron: '20 */4 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: false
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  print-tag:
    runs-on: ubuntu-latest
    if:  ${{ github.event.inputs.print_tags == 'true' }}
    steps:
      - name: Print the input tag to STDOUT
        run: echo  The tags are ${{ github.event.inputs.tags }}

  # Test the image builds and works correctly.
  test:
    name: Test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT
      - uses: actions/checkout@v2

      - name: Make Build.
        run: make build

      - name: Test building image.
        run: cd alpine/latest && docker build -t docker-curl .

      # - name: Run the built image.
      #   run: docker run --rm -it docker-curl -v https://curl.haxx.se
      #
      # - name: Verify Curl is accessible in the built image.
      #   run: curl --version

  # If on master branch, build and release image.
  release:
    name: Release
    runs-on: ubuntu-latest
    # needs: test
    # if: github.ref == 'refs/heads/master')
    if: ${{ github.event_name == 'schedule' }}

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image.
        uses: docker/build-push-action@v2
        with:
          context: alpine/latest/
          file: alpine/latest/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ github.repository }}:1.0.0, ${{ github.repository }}:latest
